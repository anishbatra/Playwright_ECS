name: Playwright Tests
on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run-tests-and-send-email:
    timeout-minutes: 120
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - name: Update .env.dev and .env.stage with Secrets
        run: |
          set -e
          mkdir -p env
          touch env/.env.dev env/.env.stage
          # Define file paths
          ENV_FILES=("env/.env.dev" "env/.env.stage")
          # Loop through each .env file and update
          for ENV_FILE in "${ENV_FILES[@]}"; do
            echo "Updating $ENV_FILE"
            # Ensure the file ends with a newline before appending
            if [ -s "$ENV_FILE" ] && [ "$(tail -c 1 "$ENV_FILE")" != "" ]; then
              echo >> "$ENV_FILE"
            fi
            # Update or add TEST_USER
            if grep -q "^TEST_USER=" "$ENV_FILE"; then
              sed -i "s/^TEST_USER=.*/TEST_USER=${{ secrets.TEST_USER }}/" "$ENV_FILE"
            else
              echo "TEST_USER=${{ secrets.TEST_USER }}" >> "$ENV_FILE"
            fi
            # Update or add PASSWORD
            if grep -q "^PASSWORD=" "$ENV_FILE"; then
              sed -i "s/^PASSWORD=.*/PASSWORD=${{ secrets.PASSWORD }}/" "$ENV_FILE"
            else
              echo "PASSWORD=${{ secrets.PASSWORD }}" >> "$ENV_FILE"
            fi
            # Optionally update BASE_URL from secrets if provided
            if [ -n "${{ secrets.BASE_URL }}" ]; then
              if grep -q "^BASE_URL=" "$ENV_FILE"; then
                sed -i "s|^BASE_URL=.*|BASE_URL=${{ secrets.BASE_URL }}|" "$ENV_FILE"
              else
                echo "BASE_URL=${{ secrets.BASE_URL }}" >> "$ENV_FILE"
              fi
            fi
            echo "$ENV_FILE updated successfully"
          done

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests in staging environment
        run: npm run e2e:regression:stage
        continue-on-error: true

      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

      - name: Upload Playwright raw results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/
          retention-days: 7

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Generate Allure Report
        if: always()
        run: |
          npm install -g allure-commandline
          rm -rf allure-results/history
          allure generate allure-results --clean -o allure-report

      - name: Clean up Allure results before deployment
        if: always()
        run: |
          find ./allure-report -type f -size +100M -exec rm -f {} \;

      - name: Deploy Allure Report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          keep_files: false
          force_orphan: true

      - name: Send Email
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.AUTOMATION_EMAIL_USERNAME }}
          password: ${{ secrets.AUTOMATION_EMAIL_PASSWORD }}
          subject: Playwright Automation Report
          body: |
            Hi,
            Please find below the link for Playwright Automation Report

            https://anishbatra.github.io/Playwright_ECS/

            Best Regards
            Anish
          to: ${{ secrets.RECEPIENT_EMAIL }}
          from: ${{ secrets.AUTOMATION_EMAIL_USERNAME }}